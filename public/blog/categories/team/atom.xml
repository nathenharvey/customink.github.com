<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: team | EngineerInk]]></title>
  <link href="http://technology.customink.com/blog/categories/team/atom.xml" rel="self"/>
  <link href="http://technology.customink.com/"/>
  <updated>2012-05-25T15:08:18-04:00</updated>
  <id>http://technology.customink.com/</id>
  <author>
    <name><![CDATA[CustomInk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Taming the Kraken - How Operations enables developer productivity]]></title>
    <link href="http://technology.customink.com/blog/2012/05/25/taming-the-kraken-how-operations-enables-developer-productivity/"/>
    <updated>2012-05-25T14:31:00-04:00</updated>
    <id>http://technology.customink.com/blog/2012/05/25/taming-the-kraken-how-operations-enables-developer-productivity</id>
    <content type="html"><![CDATA[<p>At <a href="http://railsconf2012.com/">RailsConf 2012</a>, I gave a presentation on how our web operations team enables developer productivity.</p>

<p>There's always a bit of tension when getting features from idea to production. In this talk, I describe some of the changes CustomInk has made to reduce this friction and keep the new features coming. Gone are the days of bi-monthly deploys, office pools dedicated to guessing when this deploy will be rolled back, and the ceremony surrounding the deploy-rollback-fix-deploy cycle. Today, ideas flow from product managers to developers to production with ease thanks to a number of changes that we've made to our teams, processes and tools.</p>

<p>Presenting at RailsConf was a really enjoyable experience and the presentation was well received.  There were lots of questions from the audience after the presentation.  Unfortunately, the Q &amp; A section was not captured in the video.  I'd really appreciate any questions or feedback you have, just drop a comment below.</p>

<h3>Video</h3>

<iframe width="560" height="315" src="http://www.youtube.com/embed/5vzNzQzmAk0" frameborder="0" allowfullscreen></iframe>


<h3>Slides</h3>

<script async class="speakerdeck-embed" data-id="4f96da12947c45001f018683" data-ratio="1.2945638432364097" src="http://technology.customink.com//speakerdeck.com/assets/embed.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Welcome Interns!]]></title>
    <link href="http://technology.customink.com/blog/2012/05/24/welcome-interns/"/>
    <updated>2012-05-24T16:01:00-04:00</updated>
    <id>http://technology.customink.com/blog/2012/05/24/welcome-interns</id>
    <content type="html"><![CDATA[<p>Last week the CustomInk Tech team welcomed two new interns, Nolan Carroll and Seth Vargo.  Nolan and Seth are joining us for the summer from Carnegie Mellon University where they are both majoring in Information Systems.</p>

<p>Nolan and Seth wasted no time hopping on our <a href="/blog/2012/05/14/welcome-josh-born">deploy train</a> last week, but they couldn't have done it without the help of our (semi) automated build process.  A while ago, Nathen Harvey talked about our <a href="/blog/2012/01/02/green-screen/">Green Screen</a> build monitor.  While this serves as a great motivator for us to keep our builds passing, the ability for us to quickly create builds for any branch is what keeps us moving fast.</p>

<p>Using some home grown capistrano scripts, any developer can easily create and manage an automated Jenkins build, which will automatically be monitored by Green Screen.  A developer's typical workflow might look something like:</p>

<p>```ruby</p>

<blockquote><blockquote><p>git branch new_feature
git checkout new_feature
  .... code changes...
git commit -m "added new feature"
git push origin new_feature
```</p></blockquote></blockquote>

<p>Now that a new feature branch is available in our remote repository, the developer can create and start their own Jenkins build:</p>

<p>```ruby</p>

<blockquote><blockquote><p>cap jenkins:create
  "I've created rfe_new_feature."
cap jenkins:build
  "I've found rfe_new_feature and it's building now."
```</p></blockquote></blockquote>

<p>Now a build is running on our Jenkins server.  More importantly, Jenkins will use it's Jedi powers to detect any changes to the remote branch and automatically kick off a new build.  When builds fail, the entire team is notified and Green Screen turns red.  We have a handful of other useful Jenkins tasks as well:</p>

<p><code>ruby
  cap jenkins:build     # Kicks off a build for the current branch
  cap jenkins:console   # Shows the job's console
  cap jenkins:create    # Create a job for the current branch
  cap jenkins:delete    # Deletes a job with name = rfe_[current_branch]
  cap jenkins:list      # Lists all jobs in jenkins
  cap jenkins:status    # Gets the status of a job with name = rfe_[current_branch]
</code></p>

<p>Continuous deployment can't happen without automation.  I'd like to give a big shout out to our Web Ops team for driving us down the automation super highway.  I'd also like to extend a warm welcome to Nolan and Seth, we look forward to seeing their builds pass all summer long.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Welcome Josh Born!]]></title>
    <link href="http://technology.customink.com/blog/2012/05/14/welcome-josh-born/"/>
    <updated>2012-05-14T13:17:00-04:00</updated>
    <id>http://technology.customink.com/blog/2012/05/14/welcome-josh-born</id>
    <content type="html"><![CDATA[<p>The CustomInk technology team wants to extend a warm welcome to our newest member, Josh Born.  Josh wasted no time and hopped onto the deploy train today for his first production release.</p>

<p>At CustomInk we like to <a href="http://www.customink.com/designs/proofs/jub0-000p-fxs7/front.jpg" target="_new">continuously deploy</a> changes to our site.  This means no sprints, no iterations, no milestones.  We work, and when we are satisfied with our work, we deploy it.  On average, engineers deploy updates to our site about five to seven times a day.</p>

<p>We like to manage our deployments in a very low fidelity way, which was inspired largely by the engineers at Etsy.  We call it the "deploy train" and it's nothing more then a virtual line managed by our campfire topic.</p>

<p><img src="/images/deploy_train.png" alt="Campfire Deploy Train" /></p>

<p>When you are ready to deploy a change, you add yourself to the end of the deploy train and simply wait for your turn.  The responsibility of the engineer at the front of the deploy train is to merge, deploy, and verify his or her changes in production.  When the engineer is satisfied, they take themselves off the list and notify the next engineer in line that it is their turn.</p>

<p><img src="/images/josh_born_ponder_deploy.jpg" alt="Josh ponders his first release" /></p>

<p>This will be the first of many deploys for Josh.  We are very excited to have him on board and look forward to his next release, sometime later this week.</p>

<p><img src="/images/josh_born_first_deploy.png" alt="Josh releases his first code" /></p>
]]></content>
  </entry>
  
</feed>
